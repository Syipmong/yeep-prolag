name: CI Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup build environment (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: mingw-w64-x86_64-gcc
        
    - name: Setup build environment (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y g++
        
    - name: Setup build environment (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install gcc
        
    - name: Build Yeep (Windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        mkdir -p build/core
        g++ -Wall -Wextra -std=c++17 -I include -c src/main.cpp -o build/main.o
        g++ -Wall -Wextra -std=c++17 -I include -c src/core/YeepEngine.cpp -o build/core/YeepEngine.o
        g++ -Wall -Wextra -std=c++17 -I include -c src/core/Token.cpp -o build/core/Token.o
        g++ -Wall -Wextra -std=c++17 -I include -c src/core/Lexer.cpp -o build/core/Lexer.o
        g++ build/main.o build/core/YeepEngine.o build/core/Token.o build/core/Lexer.o -o build/yeep.exe
        
    - name: Build Yeep (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p build/core
        g++ -Wall -Wextra -std=c++17 -I include -c src/main.cpp -o build/main.o
        g++ -Wall -Wextra -std=c++17 -I include -c src/core/YeepEngine.cpp -o build/core/YeepEngine.o
        g++ -Wall -Wextra -std=c++17 -I include -c src/core/Token.cpp -o build/core/Token.o
        g++ -Wall -Wextra -std=c++17 -I include -c src/core/Lexer.cpp -o build/core/Lexer.o
        g++ build/main.o build/core/YeepEngine.o build/core/Token.o build/core/Lexer.o -o build/yeep
        
    - name: Test Yeep (Windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        echo 'print("CI test successful on Windows!");' > test.yeep
        ./build/yeep.exe test.yeep
        
    - name: Test Yeep (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        echo 'print("CI test successful on ${{ matrix.os }}!");' > test.yeep
        ./build/yeep test.yeep
